import pyodbc
from decimal import Decimal
from datetime import datetime


class SQLManager:
    def __init__(self, server_name, database_name, username, password):
        self.server_name = server_name
        self.database_name = database_name
        self.username = username
        self.password = password
        self.conn = None

    def connect(self):
        """K·∫øt n·ªëi ƒë·∫øn SQL Server."""
        connection_string = f"DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={self.server_name};DATABASE={self.database_name};UID={self.username};PWD={self.password}"
        self.conn = pyodbc.connect(connection_string)
        return self.conn

    def close(self):
        """ƒê√≥ng k·∫øt n·ªëi."""
        if self.conn:
            self.conn.close()
            self.conn = None


    def update_tigia(self, currency_code, currency_name, buy, transfer, sell):
        """C·∫≠p nh·∫≠t t·ª∑ gi√° v√†o database."""
        try:
            conn = self.connect()
            cursor = conn.cursor()
            print("üëâ Debug SQL params:", currency_code, currency_name, buy, transfer, sell)
            # G·ªçi stored procedure v·ªõi 5 tham s·ªë
            cursor.execute(
                "{CALL SP_INSERT_THONGTINTIGIA (?, ?, ?, ?, ?)}",
                (currency_code, currency_name, buy, transfer, sell)
            )
            print("‚úÖ SP executed, Rows affected:", cursor.rowcount)
            result = cursor.fetchall()  # l·∫•y d·ªØ li·ªáu SELECT tr·∫£ v·ªÅ
            for row in result:
                print("üëâ SP result:", row)

            conn.commit()
            print(f"‚úÖ ƒê√£ ch√®n t·ª∑ gi√° {currency_code} v√†o DB")

        except Exception as e:
            print(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t t·ª∑ gi√° {currency_code}: {e}")
        finally:
            try:
                cursor.close()
                self.close()
            except:
                pass