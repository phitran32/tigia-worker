import schedule
import time
from decimal import Decimal
import requests
import xml.etree.ElementTree as ET
from SQLManager import SQLManager
import os

sql_manager = SQLManager(
    server_name = "14.161.14.133",
    database_name = "QuanLyKhoMoc2023",
    username = "sa",
    password = "9905376"
)


# sql_manager = SQLManager(
#     server_name   = os.getenv("DB_SERVER"),
#     database_name = os.getenv("DB_NAME"),
#     username      = os.getenv("DB_USER"),
#     password      = os.getenv("DB_PASS")
# )


def get_vcb_rates():
    url = "https://portal.vietcombank.com.vn/Usercontrols/TVPortal.TyGia/pXML.aspx?b=10"
    headers = {
        "User-Agent": "Mozilla/5.0"
    }
    # G·ª≠i y√™u c·∫ßu GET
    res = requests.get(url, headers=headers, timeout=10)
    res.encoding = 'utf-8'
    xml_text = res.text

    # Ph√¢n t√≠ch XML
    root = ET.fromstring(xml_text)
    rates = {}
    for ex in root.findall('Exrate'):
        code = ex.attrib.get('CurrencyCode')
        buy = ex.attrib.get('Buy')
        transfer = ex.attrib.get('Transfer')
        sell = ex.attrib.get('Sell')
        rates[code] = {
            "Buy": buy,
            "Transfer": transfer,
            "Sell": sell
        }
    return rates

# if __name__ == "__main__":
#     try:
#         data = get_vcb_rates()
#         for curr, vals in data.items():
#             print(curr, vals)
#     except Exception as e:
#         print("L·ªói khi l·∫•y ho·∫∑c ph√¢n t√≠ch d·ªØ li·ªáu:", e)


def get_usd_rate():
    url = "https://portal.vietcombank.com.vn/Usercontrols/TVPortal.TyGia/pXML.aspx?b=10"
    headers = {"User-Agent": "Mozilla/5.0"}
    res = requests.get(url, headers=headers, timeout=10)
    res.encoding = "utf-8"

    root = ET.fromstring(res.text)
    for ex in root.findall("Exrate"):
        if ex.attrib.get("CurrencyCode", "").strip() == "USD":
            # lo·∫°i d·∫•u ph·∫©y v√† chuy·ªÉn sang Decimal
            def D(x): return Decimal(x.replace(",", "")).quantize(Decimal("0.01"))
            return {
                "CurrencyCode": ex.attrib.get("CurrencyCode", "").strip(),
                "CurrencyName": ex.attrib.get("CurrencyName", "").strip(),
                "Buy": D(ex.attrib.get("Buy", "0")),
                "Transfer": D(ex.attrib.get("Transfer", "0")),
                "Sell": D(ex.attrib.get("Sell", "0")),
            }
    return None

# H√†m ch√≠nh
def job():
    print("üîç ƒêang th·ª±c hi·ªán c√¥ng vi·ªác...")
    usd = get_usd_rate()
    if usd:
        print("üíµ T·ª∑ gi√° USD/VND (Vietcombank):")
        print(f"  CurrencyCode     : {usd['CurrencyCode']}")
        print(f"  CurrencyName     : {usd['CurrencyName']}")
        print(f"  Mua ti·ªÅn m·∫∑t     : {usd['Buy']}")
        print(f"  Mua chuy·ªÉn kho·∫£n : {usd['Transfer']}")
        print(f"  B√°n ra           : {usd['Sell']}")
        sql_manager.update_tigia(
            usd["CurrencyCode"],
            usd["CurrencyName"],
            usd["Buy"],
            usd["Transfer"],
            usd["Sell"]
        )
    else:
        print("‚ùå Kh√¥ng t√¨m th·∫•y t·ª∑ gi√° USD")


if __name__ == "__main__":
    try:
        job()
    except Exception as e:
        print("L·ªói khi ch·∫°y job:", e)

# L√™n l·ªãch ch·∫°y m·ªói 1 ph√∫t
# schedule.every(2).minutes.do(job)

# # Ch·∫°y ch∆∞∆°ng tr√¨nh
# print("‚è∞ B·∫Øt ƒë·∫ßu ch·ª•p m√†n h√¨nh v√† g·ª≠i email t·ª± ƒë·ªông. Nh·∫•n Ctrl+C ƒë·ªÉ d·ª´ng.")
# while True:
#     schedule.run_pending()
#     time.sleep(1)